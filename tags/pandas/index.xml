<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pandas on Vincent N.</title><link>https://lyraxvincent.github.io/tags/pandas/</link><description>Recent content in pandas on Vincent N.</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 31 Jan 2022 22:43:22 +0300</lastBuildDate><atom:link href="https://lyraxvincent.github.io/tags/pandas/index.xml" rel="self" type="application/rss+xml"/><item><title>Exploratory Data Analysis Best Practices for Exhaustive Data Analysis</title><link>https://lyraxvincent.github.io/post/eda-best-practices-for-exhaustive-data-analysis/</link><pubDate>Mon, 31 Jan 2022 22:43:22 +0300</pubDate><guid>https://lyraxvincent.github.io/post/eda-best-practices-for-exhaustive-data-analysis/</guid><description>Introduction EDA, short for Exploratory Data Analysis, or as I like to call it, Data Reveal Party ðŸ˜Š (because it is fun playing around and getting your hands dirty with datasets) is one of the most important steps towards a successful data project. You get to uncover hidden data insights that only this process can unearth. It is therefore good practice to make sure you exhaust on it by investigating and looking at the dataset from every possible angle.</description></item><item><title>Feature Engineering: deriving statistical features using pandas aggregate function</title><link>https://lyraxvincent.github.io/post/feature-engineering-deriving-statistical-features-using-pandas-aggregate-function/</link><pubDate>Sun, 09 Jan 2022 20:58:49 +0530</pubDate><guid>https://lyraxvincent.github.io/post/feature-engineering-deriving-statistical-features-using-pandas-aggregate-function/</guid><description>Many times when dealing with anonymized or machine-generated datasets, you find yourself out of ideas to come up with new features because it is unclear of what the dataset variables at hand represent. Take for example the following dataframe:
1 2 3 4 5 import pandas as pd df = pd.read_csv(&amp;#34;../datasets/Updated_Test.csv&amp;#34;) data = df[df.columns[2:13]].head(10) data absorbance0 absorbance1 absorbance2 absorbance3 absorbance4 absorbance5 absorbance6 absorbance7 absorbance8 absorbance9 absorbance10 0 0.</description></item></channel></rss>