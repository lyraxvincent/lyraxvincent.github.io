<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pandas on Even - A super concise theme for Hugo</title><link>https://lyraxvincent.github.io/categories/pandas/</link><description>Recent content in Pandas on Even - A super concise theme for Hugo</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 09 Jan 2022 20:58:49 +0530</lastBuildDate><atom:link href="https://lyraxvincent.github.io/categories/pandas/index.xml" rel="self" type="application/rss+xml"/><item><title>Feature Engineering: deriving statistical features using pandas aggregate function</title><link>https://lyraxvincent.github.io/post/feature-engineering-deriving-statistical-features-using-pandas-aggregate-function/</link><pubDate>Sun, 09 Jan 2022 20:58:49 +0530</pubDate><guid>https://lyraxvincent.github.io/post/feature-engineering-deriving-statistical-features-using-pandas-aggregate-function/</guid><description>Feature Engineering: deriving statistical features using pandas aggregate function Many times when dealing with anonymized or machine-generated datasets, you find yourself out of ideas to come up with new features because it is unclear of what the dataset variables at hand represent. Take for example the following dataframe:
1 2 3 4 5 import pandas as pd df = pd.read_csv(&amp;#34;../datasets/Updated_Test.csv&amp;#34;) data = df[df.columns[2:13]].head(10) data
absorbance0 absorbance1 absorbance2 absorbance3 absorbance4 absorbance5 absorbance6 absorbance7 absorbance8 absorbance9 absorbance10 0 0.</description></item></channel></rss>